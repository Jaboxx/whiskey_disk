 - do git-deploy style change detection:  get the current branch ref, then do the fetch/reset, get the current branch ref; find the differences, make them available to the rake task(s)
   - some sort of simple API to access the detected changes
     require 'whiskey_disk/rake'
   
     namespace :deploy do
       task :post_deploy do 
         if changed_in?('db/migrate') or changed?('config/database.yml')
           Rake::Task['db:migrate'].invoke
         end
         # etc. ...
       end
     end

---

 - [Q] how to specify readily which projects need to be deployed?  Metaconfig?:
   
     --- 
     - config: /path/to/config
       project: larry
       target: staging
     - config: /path/to/config
       project: larry
       target: production
       cache: no

 - [Q] what about maintenance pages(?) (i.e., do we need a pre-deploy hook?; also are these per-target config stuffs?; fun managing changes to a maintenance page ;-)
 - [Q] do we want a mechanism to manage the config repo?  (add a repo, add a project, add an environment, put a file into the config repo for an environment?)
 - [Q] what about per-target rake tasks, do we just store these in the config repo?  does this work?
 - [Q] do we need actual support for "rollbacks"?
 - [Q] do we want to support multi-system deployments (i.e., deploy and rollback on 4 simultaneous app servers, other bullshit running on the db server, etc.)?  If we get into this, we have the original :role problem that cap faced -- i.e., we only want to run the database operations on certain hosts.
