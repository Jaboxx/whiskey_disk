 [BUG] if there is no Rakefile in the current path, but we didn't specify --path (because we found a config/deploy.yml) we should use the library's rakefile bypass

 - would be nice to have the ability to say if a project is out of date (meaning that, based upon this config file, either the checked out project repo or the checked out config repo is older than the upstream) so we can do some sort of automated / conditional deployments.  We could implement this as a config file option (check for out of date before deploying), but questions about how to "force" if necessary.  Could also be done as a flag.
   by default, the behavior should be *not* to check if in-sync, make it so that ENV['check'] =~ /^(?:t(?:rue)?|1|y(?:es))/i will trigger the check
   similarly wd --check will set the variable
   
   - the thinking is that a metadata file for multiple projects would specify values for this, with a meta-app using check=true by default

   ml=`cat .git/refs/heads/master`; mr=`git ls-remote git@ogtastic.com:whiskey_disk.git refs/heads/master`; if [[ $ml != ${mr%%       *} ]]; then { echo "out-of-date"; } else { echo "up-to-date"; } fi  
   
   - note that we actually want to check both the main repository and the configuration repository for changes 
   - this is only relevant for deploy:now, obviously
   
 - do git-deploy style change detection:  get the current branch ref, then do the fetch/reset, get the current branch ref; find the differences, make them available to the rake task(s)
   - some sort of simple API to access the detected changes
     require 'whiskey_disk/rake'
   
     namespace :deploy do
       task :post_deploy do 
         if changed_in?('db/migrate') or changed?('config/database.yml')
           Rake::Task['db:migrate'].invoke
         end
         # etc. ...
       end
     end

---

 - [Q] how to specify readily which projects need to be deployed?  Metaconfig?:
   
     --- 
     - config: /path/to/config
       project: larry
       target: staging
     - config: /path/to/config
       project: larry
       target: production

 - [Q] what about per-environment rake tasks, do we just store these in the config repo?  does this work?
 
 - [Q] ditto, maintenance pages(?) (i.e., a pre-deploy hook)

 - [Q] do we want a mechanism to manage the config repo?  (add a repo, add a project, add an environment, put a file into the config repo for an environment?)

 - [Q] do we need actual support for "rollbacks"?

 - [Q] do we want to support multi-system deployments (i.e., deploy and rollback on 4 simultaneous app servers, other bullshit running on the db server, etc.)?  If we get into this, we have the original :role problem that cap faced -- i.e., we only want to run the database operations on certain hosts.
